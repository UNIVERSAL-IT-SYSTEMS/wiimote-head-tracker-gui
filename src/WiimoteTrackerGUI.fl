# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.h} 
code_name {.cpp}
decl {\#include "WiimoteTrackerView.h"} {global
} 

decl {\#include "WiimoteTracker.h"} {global
} 

decl {\#include "SoftwareVersions.h"} {public global
} 

decl {\#include <string>} {global
} 

decl {\#include <iostream>} {global
} 

decl {\#undef VERBOSE} {global
} 

decl {class WiimoteTrackerView;} {public global
} 

decl {class WiimoteTracker;} {public global
} 

decl {class StartupProgress;} {public global
} 

decl {WiimoteTracker * _tracker;} {protected
} 

decl {WiimoteTrackerView * _view;} {protected
} 

Function {setTracker(WiimoteTracker * tracker, WiimoteTrackerView * view)} {return_type void
} {
  code {_tracker = tracker;
_view = view;} {}
} 

Function {refresh_ui()} {return_type bool
} {
  code {Fl::flush();} {}
  code {return (Fl::check() != 0);} {}
} 

Function {mainloop_ui(const float timeout = 0.0)} {return_type bool
} {
  code {return (Fl::wait(timeout) >= 0) && (Fl::first_window() != NULL);} {}
} 

Function {quitApp()} {return_type void
} {
  code {while (Fl::first_window()) {
	Fl::first_window()->hide();
}} {}
} 

Function {closeStartupWindow(void* userdata)} {private return_type void
} {
  code {StartupProgress * p = static_cast<StartupProgress *>(userdata);
p->cleanAndClose();} {}
} 

widget_class WiimoteTrackerConfigGUI {
  xywh {1316 338 350 160} type Double align 80 hide
  class Fl_Window modal
} {
  Fl_Value_Input _ledDistance {
    label {Distance between LEDs (cm)}
    callback {_apply->activate();
_save->deactivate();}
    protected xywh {215 35 60 25} maximum 50 step 0.1 value 14.5
  }
  Fl_Input _trackerName {
    label {Tracker Device Name}
    callback {_apply->activate();
_save->deactivate();}
    protected xywh {215 75 125 25} when 1
    code0 {o->value("Tracker0");}
  }
  Fl_Button _apply {
    label {Apply Changes and Restart Tracker}
    callback {_view->applyNewConfiguration();}
    protected xywh {60 118 280 32} deactivate
  }
  Fl_Menu_Bar {} {open
    xywh {0 0 350 25}
  } {
    Submenu {} {
      label File open
      xywh {15 15 100 20}
    } {
      MenuItem {} {
        label {Open configuration...}
        callback {_view->openConfig();}
        xywh {15 15 100 20} shortcut 0x4006f
      }
      MenuItem _save {
        label {&Save configuration...}
        callback {_view->saveConfig();}
        protected xywh {15 15 100 20} shortcut 0x40073
      }
    }
  }
  Function {setTrackerName(const char * name)} {return_type void
  } {
    code {_trackerName->value(name);} {}
  }
  Function {setLEDDistance(const float distance)} {return_type void
  } {
    code {_ledDistance->value(distance * 100.0);} {}
  }
  decl {friend class WiimoteTrackerView;} {}
} 

widget_class StartupProgress {
  label {Starting Tracking System...}
  callback {\#ifdef VERBOSE
	std::cerr << "StartupProgress window callback" << std::endl;
\#endif
static_cast<StartupProgress*>(o)->cleanAndClose();} open
  xywh {1324 297 430 360} type Double align 80
  class Fl_Window modal visible
} {
  Fl_Box _closeMessage {
    label {Startup successful, this window will close automatically...}
    protected xywh {10 330 410 30} align 128 hide
    code0 {hide();}
  }
  Fl_Group {} {
    label {VRPN Server Connection} open
    xywh {10 10 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _connectionProgress {
      protected xywh {20 40 260 30}
    }
    Fl_Button _connectionReset {
      label Reset
      callback {o->deactivate();
_tracker->teardownConnection();
_tracker->startTrackerSystem();}
      protected xywh {290 40 120 30} deactivate
    }
  }
  Fl_Group {} {
    label {Wiimote Device} open
    xywh {10 90 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _wiimoteProgress {
      protected xywh {20 120 260 30}
    }
    Fl_Button _wiimoteReset {
      label Reset
      callback {o->deactivate();
_tracker->teardownWiimoteDevice();
_tracker->startTrackerSystem();}
      protected xywh {290 120 120 30} deactivate
    }
  }
  Fl_Group {} {
    label {Tracker Device} open
    xywh {10 170 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _trackerProgress {
      protected xywh {20 200 260 30}
    }
    Fl_Button _trackerReset {
      label Reset
      callback {o->deactivate();
_tracker->teardownTrackerDevice();
_tracker->startTrackerSystem();}
      protected xywh {290 200 120 30} deactivate
    }
    Fl_Box {} {
      xywh {30 240 20 0}
    }
  }
  Fl_Group {} {
    label {Tracker Client Device} open
    xywh {10 250 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _clientProgress {
      protected xywh {20 280 260 30}
    }
    Fl_Button _clientReset {
      label Reset
      callback {o->deactivate();
_tracker->teardownClientDevice();
_tracker->startTrackerSystem();} selected
      protected xywh {290 280 120 30} deactivate
    }
    Fl_Box {} {
      xywh {30 320 20 0}
    }
  }
  Function {scheduleClose(const float seconds)} {return_type void
  } {
    code {_closeMessage->show();} {}
    code {Fl::add_timeout(seconds, &closeStartupWindow, this);} {}
  }
  Function {cleanAndClose()} {return_type void
  } {
    code {_closeMessage->hide();
if (!_tracker->isSystemRunning()) {
	// Closed with the system not running - shut it down
	_tracker->stopTrackerSystem();
}
hide();} {}
  }
  decl {friend class WiimoteTrackerView;} {}
} 

widget_class WiimoteTrackerGUI {
  label {Wii Remote Head Tracker}
  xywh {1945 310 520 560} type Double align 80 hide
  class Fl_Window modal
} {
  decl {SoftwareVersions _vers;} {protected
  }
  Fl_Menu_Bar {} {open
    xywh {0 0 520 25}
  } {
    Submenu {} {
      label File open
      xywh {5 5 100 20}
    } {
      MenuItem {} {
        label {Re&configure tracker...}
        callback {_view->reconfigure();}
        xywh {0 0 36 21} divider
      }
      MenuItem {} {
        label {&Quit}
        callback {quitApp();}
        xywh {5 5 100 20}
      }
    }
  }
  Fl_Tabs {} {
    xywh {10 30 500 520}
  } {
    Fl_Group {} {
      label {Tracker Status}
      xywh {10 50 500 490}
    } {
      Fl_Light_Button _trackerButton {
        label {Please Wait...}
        callback {if (o->value() == 0) {
	// Was not running - start tracker
	_tracker->startTrackerSystem();

} else {
	// was running - stop tracker
	_tracker->stopTrackerSystem();
}}
        protected xywh {200 60 120 50} type Normal selection_color 63 labeltype ENGRAVED_LABEL align 176 deactivate
      }
      Fl_Group _updateGroup {
        label {Updated every N reports} open
        protected xywh {50 250 420 190} box THIN_DOWN_BOX
      } {
        Fl_Value_Output _rate {
          label {Average Tracker Report Rate (Hz)}
          protected xywh {340 280 80 30} box ENGRAVED_BOX
        }
        Fl_Output _pos {
          label Position
          protected xywh {250 340 170 30} box ENGRAVED_BOX color 49
        }
        Fl_Output _rot {
          label {Rotation (quaternion)}
          protected xywh {250 370 170 30} box ENGRAVED_BOX color 49
        }
      }
    }
    Fl_Group {} {
      label About
      xywh {10 50 500 500} hide
    } {
      Fl_Box {} {
        label {Wii Remote Head Tracker (with Integrated GUI)}
        xywh {145 53 230 46} labeltype EMBOSSED_LABEL labelsize 16 align 128
      }
      Fl_Box _appVer {
        label {Version X.XX}
        protected xywh {55 96 410 24} labelfont 1
      }
      Fl_Group {} {
        label {Original Author: Ryan Pavlik} open
        xywh {20 120 480 120} box EMBOSSED_BOX labelfont 1 align 17
      } {
        Fl_Box {} {
          label {<rpavlik@@iastate.edu> <abiryan@@ryand.net> http://academic.cleardefinition.com}
          xywh {20 154 480 38} labelsize 12 align 128
        }
        Fl_Box {} {
          label {Developed at the Virtual Reality Applications Center at Iowa State University}
          xywh {20 196 480 14} labelsize 12 align 128
        }
        Fl_Box {} {
          label {Funded by NSF Award CMMI-0928774}
          xywh {20 214 480 16} labelsize 12 align 128
        }
      }
      Fl_Group {} {
        label {Compiled Against} open
        xywh {20 300 480 80} box EMBOSSED_BOX labelfont 1 labelsize 12 align 17
      } {
        Fl_Box _vrpnVer {
          label {vrpn: ver. XX.XX}
          xywh {30 322 460 20} labelsize 12 align 128
        }
        Fl_Box _wiiuseVer {
          label {WiiUse version X.XX}
          xywh {30 342 460 18} labelsize 12 align 128
        }
        Fl_Box _fltkVer {
          label {FLTK version X.XX}
          xywh {30 358 460 22} labelsize 12 align 128
        }
      }
      Fl_Group {} {
        label {Academic Citation} open
        xywh {20 240 480 60} box EMBOSSED_BOX labelfont 1 align 17
      } {
        Fl_Box {} {
          label {Pavlik, R. and Vance, J. "A Modular Implementation of Wii Remote Head Tracking for Virtual Reality." ASME Paper WINVR2010-3771}
          xywh {30 260 460 40} labelsize 12 align 128
        }
      }
      Fl_Group {} {
        label {Copyright and Licenses} open
        xywh {20 380 480 160} box EMBOSSED_BOX labelfont 1 labelsize 12 align 17
      } {
        Fl_Button {} {
          label {Show Copyright and License Details}
          callback {showLicenseDetails();}
          xywh {30 490 460 40}
        }
        Fl_Box {} {
          label {Based in part on the work of the FLTK project (http://www.fltk.org).}
          xywh {40 412 440 18} labelsize 10 align 128
        }
        Fl_Box {} {
          label {Based in part on Fl_Native_File_Chooser (http://seriss.com/people/erco/fltk/Fl_Native_File_Chooser/).}
          xywh {40 428 440 32} labelsize 10 align 128
        }
        Fl_Box {} {
          label {Based in part on the work of the WiiUse project (http://wiiuse.net/).}
          xywh {40 462 440 18} labelsize 10 align 128
        }
      }
    }
  }
  Function {setWorking()} {return_type void
  } {
    code {_trackerButton->copy_label("Please wait...");
_trackerButton->deactivate();} {}
  }
  Function {setStatus(bool started)} {return_type void
  } {
    code {if (started) {
	_trackerButton->label("@-5square    Stop Tracker");
	_trackerButton->value(1);	
} else {
	_trackerButton->label("@>    Start Tracker");
	_trackerButton->value(0);
}
_trackerButton->activate();} {}
  }
  Function {updateVersions()} {return_type void
  } {
    code {_appVer->label(_vers._appVer.c_str());
_vrpnVer->label(_vers._vrpnVer.c_str());
_wiiuseVer->label(_vers._wiiuseVer.c_str());
_fltkVer->label(_vers._fltkVer.c_str());} {}
  }
  Function {showLicenseDetails()} {return_type void
  } {
    Fl_Window _licenses {
      label Licenses
      callback {o->hide();}
      protected xywh {10 20 590 609} type Double hide modal
    } {
      Fl_Group {} {
        label {Tracking Module and GUI} open
        xywh {10 20 570 70} box DOWN_BOX labelsize 12
      } {
        Fl_Box {} {
          label {Copyright 2009-2010 Iowa State University. }
          xywh {90 23 410 20} labelsize 10 align 128
        }
        Fl_Box {} {
          label {Distributed under the Boost Software License, Version 1.0.}
          xywh {90 41 410 18} labelsize 10 align 128
        }
        Fl_Box {} {
          label {(See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) }
          xywh {90 55 410 32} labelsize 10 align 128
        }
      }
      Fl_Group {} {
        label VRPN open
        xywh {10 110 570 80} box DOWN_BOX labelsize 12
      } {
        Fl_Box {} {
          label {VRPN (The Virtual Reality Peripheral Network) has been placed into the public domain by the copyright owner Russell M. Taylor II at the University of North Carolina at Chapel Hill on 5/4/98. }
          xywh {90 120 410 40} labelsize 10 align 128
        }
        Fl_Box {} {
          label {For information, please see http://www.vprn.org/}
          xywh {90 170 410 20} labelsize 10 align 128
        }
      }
      Fl_Group {} {
        label {FLTK, Fl_Native_File_Chooser} open
        xywh {10 210 570 200} box DOWN_BOX labelsize 12
      } {
        Fl_Box {} {
          label {Fl_Native_File_Chooser is available under the terms of the Fl_Native_File_Chooser License (GNU Library General Public License version 2 with FLTK exceptions).}
          xywh {20 240 550 30} labelsize 10 align 128
        }
        Fl_Box {} {
          label {FLTK is available under the terms of the FLTK License (GNU Library General Public License version 2 with exceptions).}
          xywh {20 210 550 30} labelsize 10 align 128
        }
        Fl_Box {} {
          label {This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.}
          xywh {20 280 550 40} labelsize 10 align 148
        }
        Fl_Box {} {
          label {This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for more details.}
          xywh {20 325 550 40} labelsize 10 align 148
        }
        Fl_Box {} {
          label {You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA}
          xywh {20 370 550 30} labelsize 10 align 148
        }
      }
      Fl_Group {} {
        label WiiUse open
        xywh {10 430 570 140} box DOWN_BOX labelsize 12
      } {
        Fl_Box {} {
          label {WiiUse is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.}
          xywh {20 440 550 40} labelsize 10 align 148
        }
        Fl_Box {} {
          label {WiiUse is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.}
          xywh {20 485 550 40} labelsize 10 align 148
        }
        Fl_Box {} {
          label {You should have received a copy of the GNU General Public License along with WiiUse.  If not, see <http://www.gnu.org/licenses/>.}
          xywh {20 530 550 30} labelsize 10 align 148
        }
      }
    }
    code {_licenses->show();
refresh_ui();} {}
  }
  Function {reconfigure()} {return_type void
  } {
    code {_view->reconfigure();} {}
  }
  decl {friend class WiimoteTrackerView;} {}
} 
