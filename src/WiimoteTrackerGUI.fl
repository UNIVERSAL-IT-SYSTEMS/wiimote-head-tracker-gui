# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.h} 
code_name {.cpp}
decl {class WiimoteTracker;} {public global
} 

decl {\#include <WiimoteTracker.h>} {global
} 

widget_class WiimoteTrackerConfigGUI {open
  xywh {372 334 350 160} type Double
  class Fl_Window visible
} {
  decl {WiimoteTracker * _tracker;} {protected
  }
  Fl_Value_Input _ledDistance {
    label {Distance between LEDs (cm)}
    protected xywh {215 35 60 25} maximum 50 step 0.1 value 14.5
  }
  Fl_Input _trackerName {
    label {Tracker Device Name}
    protected xywh {215 75 125 25}
    code0 {o->value("Tracker0");}
  }
  Fl_Button {} {
    label {Apply Changes and Restart Tracker}
    callback {_tracker->setTrackerName(_trackerName->value());
_tracker->setLEDDistance(_ledDistance->value() / 100.0);
_tracker->startTrackerDevice();}
    xywh {60 118 280 32}
  }
  Fl_Menu_Bar {} {open
    xywh {0 0 350 25}
  } {
    Submenu {} {
      label File open
      xywh {15 15 100 20}
    } {
      MenuItem {} {
        label {Open configuration...}
        xywh {15 15 100 20} shortcut 0x4006f
      }
      MenuItem {} {
        label {&Save configuration...}
        xywh {15 15 100 20} shortcut 0x40073 divider
      }
      MenuItem {} {
        label {&Quit}
        callback {// Hide main window to signal exit
this->hide();}
        xywh {15 15 100 20}
      }
    }
  }
  Function {setTracker(WiimoteTracker * tracker)} {return_type void
  } {
    code {_tracker = tracker;} {}
  }
  Function {setTrackerName(const char * name)} {return_type void
  } {
    code {_trackerName->value(name);} {}
  }
  Function {setLEDDistance(const float distance)} {return_type void
  } {
    code {_ledDistance->value(distance * 100.0);} {}
  }
} 

widget_class StartupProgress {
  label {Starting Tracking System...} open
  xywh {125 586 430 250} type Double
  class Fl_Window modal visible
} {
  decl {WiimoteTracker * _tracker;} {}
  Function {setTracker(WiimoteTracker * tracker)} {return_type void
  } {
    code {_tracker = tracker;} {}
  }
  Fl_Group {} {
    label {VRPN Server Connection}
    xywh {10 10 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _connectionProgress {
      protected xywh {20 40 260 30}
    }
    Fl_Button _connectionReset {
      label Reset
      callback {_tracker->startConnection();
_tracker->startWiimoteDevice();
_tracker->startTrackerDevice();}
      protected xywh {290 40 120 30} deactivate
    }
  }
  Fl_Group {} {
    label {Wiimote Device}
    xywh {10 90 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _wiimoteProgress {
      protected xywh {20 120 260 30}
    }
    Fl_Button _wiimoteReset {
      label Reset
      callback {_tracker->startWiimoteDevice();
_tracker->startTrackerDevice();}
      protected xywh {290 120 120 30} deactivate
    }
  }
  Fl_Group {} {
    label {Tracker Device}
    xywh {10 170 410 70} box EMBOSSED_BOX align 145
  } {
    Fl_Progress _trackerProgress {
      protected xywh {20 200 260 30}
    }
    Fl_Button _trackerReset {
      label Reset
      callback {_tracker->startTrackerDevice();}
      protected xywh {290 200 120 30} deactivate
    }
  }
  Function {setConnectionStatus(const float completion, const char * message, bool error=false)} {return_type void
  } {
    code {clearWiimoteStatus();

// Set self
_connectionProgress->minimum(0.0);
_connectionProgress->maximum(1.0);
_connectionProgress->value(completion);
_connectionProgress->copy_label(message);
_connectionProgress->redraw();

if (error) {
	_connectionReset->activate();
} else {
	_connectionReset->deactivate();
}
_connectionReset->redraw();} {}
  }
  Function {clearConnectionStatus()} {return_type void
  } {
    code {clearWiimoteStatus();
_connectionProgress->value(0.0);
_connectionProgress->label("Not started");
_connectionProgress->redraw();
_connectionReset->deactivate();
_connectionReset->redraw();} {}
  }
  Function {setWiimoteStatus(const float completion, const char * message, bool error=false)} {return_type void
  } {
    code {clearTrackerStatus();

// Set self
_wiimoteProgress->minimum(0.0);
_wiimoteProgress->maximum(1.0);
_wiimoteProgress->value(completion);
_wiimoteProgress->copy_label(message);
_wiimoteProgress->redraw();

if (error) {
	_wiimoteReset->activate();
} else {
	_wiimoteReset->deactivate();
}
_wiimoteReset->redraw();} {}
  }
  Function {clearWiimoteStatus()} {return_type void
  } {
    code {clearTrackerStatus();
_wiimoteProgress->value(0.0);
_wiimoteProgress->label("Not started");
_wiimoteProgress->redraw();

_wiimoteReset->deactivate();
_wiimoteReset->redraw();} {}
  }
  Function {setTrackerStatus(const float completion, const char * message, bool error=false)} {return_type void
  } {
    code {// Set self
_trackerProgress->minimum(0.0);
_trackerProgress->maximum(1.0);
_trackerProgress->value(completion);
_trackerProgress->copy_label(message);
_trackerProgress->redraw();

if (error) {
	_trackerReset->activate();
} else {
	_trackerReset->deactivate();
}
_trackerReset->redraw();} {}
  }
  Function {clearTrackerStatus()} {return_type void
  } {
    code {_trackerProgress->value(0.0);
_trackerProgress->label("Not started");
_trackerProgress->redraw();

_trackerReset->deactivate();
_trackerReset->redraw();} {selected
    }
  }
  Function {mainloop()} {return_type bool
  } {
    code {return (Fl::check() != 0);} {}
  }
} 

widget_class WiimoteTrackerGUI {
  label {Wii Remote Head Tracker} open
  xywh {81 223 260 90} type Double
  class Fl_Window visible
} {
  decl {WiimoteTracker * _tracker;} {protected
  }
  Function {refreshDisplay()} {open return_type void
  } {
    code {flush();
redraw();} {}
  }
  Function {mainloop()} {open return_type bool
  } {
    code {return (Fl::check() != 0);} {}
  }
  Function {setTracker(WiimoteTracker * tracker)} {return_type void
  } {
    code {_tracker = tracker;} {}
  }
  Fl_Menu_Bar {} {
    xywh {0 0 260 25}
  } {
    Submenu {} {
      label File open
      xywh {5 5 100 20}
    } {
      MenuItem {} {
        label {Re&configure tracker...}
        xywh {0 0 36 21}
      }
      MenuItem {} {
        label {&Open configuration...}
        xywh {5 5 100 20} shortcut 0x4006f
      }
      MenuItem {} {
        label {&Quit}
        callback {hide();}
        xywh {5 5 100 20}
      }
    }
    MenuItem {} {
      label {About...}
      xywh {0 0 36 21}
    }
  }
  Fl_Value_Output {} {
    label {Visible Points}
    xywh {150 40 30 30}
  }
} 
